dist: trusty
sudo: false

language: go

go_import_path: github.com/src-d/datasets
go:
  - 1.10.x
  - 1.11.x

before_install:
  - go get -v -u golang.org/x/lint/golint

script:
  - go vet ./...
  - lintwarns=$(golint ./... | grep src-d/datasets || true)
  - if [ ! -z $lintwarns ]; then echo $lintwarns; false; fi
  - make test-coverage

after_success:
  - bash <(curl -s https://codecov.io/bash)

jobs:
  include:
    - stage: deploy
      os: osx
      go: 1.11.x
      after_success:
        - gzip -S .darwin_amd64.gz $GOPATH/bin/pga-create
        - gzip -S .darwin_amd64.gz $GOPATH/bin/pga
      install:
        - go get -v github.com/src-d/datasets/PublicGitArchive/pga-create/...
        - go get -v github.com/src-d/datasets/PublicGitArchive/pga/...
      script: skip
      deploy:
        provider: releases
        api_key:
          secure: $GITHUB_TOKEN
        file:
          - "$GOPATH/bin/pga-create.darwin_amd64.gz"
          - "$GOPATH/bin/pga.darwin_amd64.gz"
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy
      os: linux
      go: 1.11.x
      install:
        - go get -v github.com/src-d/datasets/PublicGitArchive/pga-create/...
        - go get -v github.com/src-d/datasets/PublicGitArchive/pga/...
      script: skip
      after_success:
        - gzip -S .linux_amd64.gz $GOPATH/bin/pga-create
        - gzip -S .linux_amd64.gz $GOPATH/bin/pga
      deploy:
        provider: releases
        api_key:
          secure: $GITHUB_TOKEN
        file:
          - "$GOPATH/bin/pga-create.linux_amd64.gz"
          - "$GOPATH/bin/pga.linux_amd64.gz"
        skip_cleanup: true
        on:
          tags: true

notifications:
  email: false
